# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  test:
    docker:
      - image: cimg/php-8.1
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "composer.lock" }}
      - run:
          name: "composer install"
          command: "composer install --prefer-dist --no-interaction"
      - save_cache:
          key: dependency-cache-{{ checksum "composer.lock" }}
          paths:
            - ./vendor
      - run:
          name: "PHP CodeSniffer: Source"
          command: "vendor/bin/phpcs --standard=ruleset.xml src/"
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  code-quality:
    jobs:
      - test
  say-hello-workflow:
    jobs:
      - say-hello
